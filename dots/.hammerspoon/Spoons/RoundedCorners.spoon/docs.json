[
  {
    "Constant" : [

    ],
    "submodules" : [

    ],
    "Function" : [

    ],
    "Variable" : [
      {
        "doc" : "Controls whether corners are drawn on all screens or just the primary screen. Defaults to true",
        "stripped_doc" : [
          "Controls whether corners are drawn on all screens or just the primary screen. Defaults to true"
        ],
        "def" : "RoundedCorners.allScreens",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "RoundedCorners.allScreens",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "allScreens",
        "desc" : "Controls whether corners are drawn on all screens or just the primary screen. Defaults to true"
      },
      {
        "doc" : "Controls the radius of the rounded corners, in points. Defaults to 6",
        "stripped_doc" : [
          "Controls the radius of the rounded corners, in points. Defaults to 6"
        ],
        "def" : "RoundedCorners.radius",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "RoundedCorners.radius",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "radius",
        "desc" : "Controls the radius of the rounded corners, in points. Defaults to 6"
      },
      {
        "doc" : "Controls which level of the screens the corners are drawn at. See `hs.canvas.windowLevels` for more information. Defaults to `screenSaver + 1`",
        "stripped_doc" : [
          "Controls which level of the screens the corners are drawn at. See `hs.canvas.windowLevels` for more information. Defaults to `screenSaver + 1`"
        ],
        "def" : "RoundedCorners.level",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "RoundedCorners.level",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "level",
        "desc" : "Controls which level of the screens the corners are drawn at. See `hs.canvas.windowLevels` for more information. Defaults to `screenSaver + 1`"
      }
    ],
    "stripped_doc" : [

    ],
    "Deprecated" : [

    ],
    "type" : "Module",
    "desc" : "Give your screens rounded corners",
    "Constructor" : [

    ],
    "items" : [
      {
        "doc" : "Controls whether corners are drawn on all screens or just the primary screen. Defaults to true",
        "stripped_doc" : [
          "Controls whether corners are drawn on all screens or just the primary screen. Defaults to true"
        ],
        "def" : "RoundedCorners.allScreens",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "RoundedCorners.allScreens",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "allScreens",
        "desc" : "Controls whether corners are drawn on all screens or just the primary screen. Defaults to true"
      },
      {
        "doc" : "Controls which level of the screens the corners are drawn at. See `hs.canvas.windowLevels` for more information. Defaults to `screenSaver + 1`",
        "stripped_doc" : [
          "Controls which level of the screens the corners are drawn at. See `hs.canvas.windowLevels` for more information. Defaults to `screenSaver + 1`"
        ],
        "def" : "RoundedCorners.level",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "RoundedCorners.level",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "level",
        "desc" : "Controls which level of the screens the corners are drawn at. See `hs.canvas.windowLevels` for more information. Defaults to `screenSaver + 1`"
      },
      {
        "doc" : "Controls the radius of the rounded corners, in points. Defaults to 6",
        "stripped_doc" : [
          "Controls the radius of the rounded corners, in points. Defaults to 6"
        ],
        "def" : "RoundedCorners.radius",
        "parameters" : [

        ],
        "notes" : [

        ],
        "signature" : "RoundedCorners.radius",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "radius",
        "desc" : "Controls the radius of the rounded corners, in points. Defaults to 6"
      },
      {
        "doc" : "Starts RoundedCorners\n\nParameters:\n * None\n\nReturns:\n * The RoundedCorners object\n\nNotes:\n * This will draw the rounded screen corners and start watching for changes in screen sizes\/layouts, reacting accordingly",
        "stripped_doc" : [
          "Starts RoundedCorners",
          ""
        ],
        "def" : "RoundedCorners:start()",
        "parameters" : [
          " * None",
          ""
        ],
        "notes" : [
          " * This will draw the rounded screen corners and start watching for changes in screen sizes\/layouts, reacting accordingly"
        ],
        "signature" : "RoundedCorners:start()",
        "type" : "Method",
        "returns" : [
          " * The RoundedCorners object",
          ""
        ],
        "name" : "start",
        "desc" : "Starts RoundedCorners"
      },
      {
        "doc" : "Stops RoundedCorners\n\nParameters:\n * None\n\nReturns:\n * The RoundedCorners object\n\nNotes:\n * This will remove all rounded screen corners and stop watching for changes in screen sizes\/layouts",
        "stripped_doc" : [
          "Stops RoundedCorners",
          ""
        ],
        "def" : "RoundedCorners:stop()",
        "parameters" : [
          " * None",
          ""
        ],
        "notes" : [
          " * This will remove all rounded screen corners and stop watching for changes in screen sizes\/layouts"
        ],
        "signature" : "RoundedCorners:stop()",
        "type" : "Method",
        "returns" : [
          " * The RoundedCorners object",
          ""
        ],
        "name" : "stop",
        "desc" : "Stops RoundedCorners"
      }
    ],
    "doc" : "Give your screens rounded corners\n\nDownload: [https:\/\/github.com\/Hammerspoon\/Spoons\/raw\/master\/Spoons\/RoundedCorners.spoon.zip](https:\/\/github.com\/Hammerspoon\/Spoons\/raw\/master\/Spoons\/RoundedCorners.spoon.zip)",
    "Method" : [
      {
        "doc" : "Starts RoundedCorners\n\nParameters:\n * None\n\nReturns:\n * The RoundedCorners object\n\nNotes:\n * This will draw the rounded screen corners and start watching for changes in screen sizes\/layouts, reacting accordingly",
        "stripped_doc" : [
          "Starts RoundedCorners",
          ""
        ],
        "def" : "RoundedCorners:start()",
        "parameters" : [
          " * None",
          ""
        ],
        "notes" : [
          " * This will draw the rounded screen corners and start watching for changes in screen sizes\/layouts, reacting accordingly"
        ],
        "signature" : "RoundedCorners:start()",
        "type" : "Method",
        "returns" : [
          " * The RoundedCorners object",
          ""
        ],
        "name" : "start",
        "desc" : "Starts RoundedCorners"
      },
      {
        "doc" : "Stops RoundedCorners\n\nParameters:\n * None\n\nReturns:\n * The RoundedCorners object\n\nNotes:\n * This will remove all rounded screen corners and stop watching for changes in screen sizes\/layouts",
        "stripped_doc" : [
          "Stops RoundedCorners",
          ""
        ],
        "def" : "RoundedCorners:stop()",
        "parameters" : [
          " * None",
          ""
        ],
        "notes" : [
          " * This will remove all rounded screen corners and stop watching for changes in screen sizes\/layouts"
        ],
        "signature" : "RoundedCorners:stop()",
        "type" : "Method",
        "returns" : [
          " * The RoundedCorners object",
          ""
        ],
        "name" : "stop",
        "desc" : "Stops RoundedCorners"
      }
    ],
    "Command" : [

    ],
    "Field" : [

    ],
    "name" : "RoundedCorners"
  }
]